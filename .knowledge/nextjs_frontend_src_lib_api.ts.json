{"is_source_file": true, "format": "TypeScript", "description": "This file defines a centralized API client for a Next.js frontend application, including helper functions for HTTP requests, authentication, dashboards, session management, and resource administration. It contains mock functions and API calls for various app-specific features.", "external_files": ["/api/chat", "/api/upload"], "external_methods": ["fetch"], "published": ["api", "login", "register", "getAdminDashboard", "getMentorDashboard", "listStudentSessions", "createSession", "getSessionMessages", "sendMessage", "uploadMaterial", "getStreak", "listUsers", "createUser", "deleteUser", "listDepartments", "createDepartment", "deleteDepartment"], "classes": [], "methods": [{"name": "async function request<T>( request", "description": "Performs an HTTP fetch request with retries, handling response parsing and errors.", "scope": "", "scopeKind": ""}, {"name": "export async function login(_body: LoginReq): Promise<{ token: string; role: \"student\" | \"mentor/ login", "description": "Mocks login process, assigning roles based on email prefix.", "scope": "", "scopeKind": ""}, {"name": "export async function register(_body: RegisterReq): Promise<{ ok: boolean }> { register", "description": "Mocks user registration.", "scope": "", "scopeKind": ""}, {"name": "export async function getAdminDashboard(): Promise<{ users: number; departments: number; activeS/ getAdminDashboard", "description": "Returns mock data representing admin dashboard metrics.", "scope": "", "scopeKind": ""}, {"name": "export async function getMentorDashboard(): Promise<{ getMentorDashboard", "description": "Returns mock data for mentor dashboard including trends, distribution, and top students.", "scope": "", "scopeKind": ""}, {"name": "export async function listStudentSessions(): Promise<Session[]> { listStudentSessions", "description": "Mocks listing of student sessions.", "scope": "", "scopeKind": ""}, {"name": "export async function createSession(): Promise<{ id: string }> { createSession", "description": "Mocks creation of a new session.", "scope": "", "scopeKind": ""}, {"name": "export async function getSessionMessages(sessionId: string): Promise<Message[]> { getSessionMessages", "description": "Mocks retrieval of messages for a given session.", "scope": "", "scopeKind": ""}, {"name": "export async function sendMessage( sendMessage", "description": "Sends a message via API or returns a mock response if the API is unavailable.", "scope": "", "scopeKind": ""}, {"name": "export async function uploadMaterial(_files: Array<{ name: string; size: number }>): Promise<{ o/ uploadMaterial", "description": "Mocks uploading files.", "scope": "", "scopeKind": ""}, {"name": "export async function getStreak(): Promise<{ current: number; best: number }> { getStreak", "description": "Mocks retrieval of streak information.", "scope": "", "scopeKind": ""}, {"name": "export async function listUsers(): Promise<Array<{ id: string; name: string; email: string; role/ listUsers", "description": "Mocks listing users for admin resources.", "scope": "", "scopeKind": ""}, {"name": "export async function createUser(_body: { name: string; email: string; role: string }): Promise</ createUser", "description": "Mocks creation of a new user.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteUser(_id: string): Promise<{ ok: boolean }> { deleteUser", "description": "Mocks deletion of a user.", "scope": "", "scopeKind": ""}, {"name": "export async function listDepartments(): Promise<Array<{ id: string; name: string }>> { listDepartments", "description": "Mocks listing departments.", "scope": "", "scopeKind": ""}, {"name": "export async function createDepartment(_body: { name: string }): Promise<{ ok: boolean }> { createDepartment", "description": "Mocks creating a new department.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteDepartment(_id: string): Promise<{ ok: boolean }> { deleteDepartment", "description": "Mocks deleting a department.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "setTimeout", "api.post"], "search-terms": ["api client", "Next.js API", "authentication", "dashboard data", "session management", "mock functions", "resource management", "API wrapper", "HTTP request retries", "TypeScript"], "state": 2, "file_id": 61, "knowledge_revision": 158, "git_revision": "", "ctags": [{"_type": "tag", "name": "BASE", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^const BASE =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "LoginReq", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^type LoginReq = { email: string; password: string };$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Message", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^type Message = { id: string; role: \"user\" | \"assistant\"; content: string; createdAt: string };$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "RegisterReq", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^type RegisterReq = { name: string; email: string; password: string };$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Session", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^type Session = { id: string; title: string; updatedAt: string };$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export const api = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createDepartment", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function createDepartment(_body: { name: string }): Promise<{ ok: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createSession", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function createSession(): Promise<{ id: string }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createUser", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function createUser(_body: { name: string; email: string; role: string }): Promise</", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteDepartment", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function deleteDepartment(_id: string): Promise<{ ok: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteUser", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function deleteUser(_id: string): Promise<{ ok: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const email = _body.email || \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "getAdminDashboard", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function getAdminDashboard(): Promise<{ users: number; departments: number; activeS/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getMentorDashboard", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function getMentorDashboard(): Promise<{$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getSessionMessages", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function getSessionMessages(sessionId: string): Promise<Message[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getStreak", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function getStreak(): Promise<{ current: number; best: number }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const headers: HeadersInit = {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "listDepartments", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function listDepartments(): Promise<Array<{ id: string; name: string }>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "listStudentSessions", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function listStudentSessions(): Promise<Session[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "listUsers", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function listUsers(): Promise<Array<{ id: string; name: string; email: string; role/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function login(_body: LoginReq): Promise<{ token: string; role: \"student\" | \"mentor/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function register(_body: RegisterReq): Promise<{ ok: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^async function request<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^      const res = await fetch(url, {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^    const res = await api.post<{ reply: string }>(\"\\/api\\/chat\", { message: body.content });$/", "language": "TypeScript", "kind": "constant", "scope": "sendMessage", "scopeKind": "function"}, {"_type": "tag", "name": "retries", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const { retries = 0, ...init } = options;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const role = email.startsWith(\"admin\")$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "sendMessage", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function sendMessage($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^        const text = await res.text().catch(() => \"\");$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "uploadMaterial", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function uploadMaterial(_files: Array<{ name: string; size: number }>): Promise<{ o/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const url = `${BASE}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}], "hash": "426bdc76c797ebf5b0c5cc4fbbe6f3b9", "format-version": 4, "code-base-name": "nextjs_frontend", "filename": "nextjs_frontend/src/lib/api.ts", "revision_history": [{"158": ""}]}