{"is_source_file": true, "format": "TypeScript", "description": "This file defines a TypeScript module that provides an API client wrapper for making HTTP requests with built-in retry logic and convenience methods (get, post, put, delete). It includes an Options type for request configurations and exports an 'api' object with methods for each HTTP verb.", "external_files": ["node_modules/@types/node", "fetch"], "external_methods": ["fetch"], "published": ["api", "request"], "classes": [], "methods": [{"name": "async function request<T = any>(url: string, opts: Options = {}): Promise<T> { request", "description": "Performs an HTTP request with retry logic, handles JSON and fallback for text responses, throws on HTTP errors.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "res.headers.get", "res.text", "res.json", "setTimeout"], "search-terms": ["API request wrapper", "retry logic", "fetch", "TypeScript API client", "request options"], "state": 2, "file_id": 23, "knowledge_revision": 50, "git_revision": "", "ctags": [{"_type": "tag", "name": "Options", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^type Options = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^export const api = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const base = process.env.NEXT_PUBLIC_API_BASE || \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "ct", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^      const ct = res.headers.get(\"content-type\") || \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "endpoint", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const endpoint = url.startsWith(\"http\") ? url : `${base}${url}`;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const headers: Record<string, string> = {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^async function request<T = any>(url: string, opts: Options = {}): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^      const res = await fetch(endpoint, {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "retries", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const retries = opts.retries ?? 1;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "txt", "path": "/home/kavia/workspace/code-generation/socratic-learning-assistant-147382-147391/nextjs_frontend/src/lib/api.ts", "pattern": "/^        const txt = await res.text().catch(() => \"\");$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}], "hash": "70ecad90114b4c334665b3c24b613677", "format-version": 4, "code-base-name": "nextjs_frontend", "filename": "nextjs_frontend/src/lib/api.ts", "revision_history": [{"50": ""}]}